{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/pantero/Code/Codeworks/GoFish/GoFish-Client/screens/ProjectMap.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport { Constants } from \"expo\";\nimport * as Permissions from \"expo-permissions\";\nimport * as Location from \"expo-location\";\nimport MapView, { Marker } from \"react-native-maps\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar CustomMarker = function CustomMarker() {\n  return React.createElement(View, {\n    style: {\n      paddingVertical: 10,\n      paddingHorizontal: 30,\n      backgroundColor: \"#007bff\",\n      borderColor: \"#eee\",\n      borderRadius: 5,\n      elevation: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, \"CM\"));\n};\n\nvar getLocationPermission = function getLocationPermission() {\n  var _await$Permissions$as, status;\n\n  return _regeneratorRuntime.async(function getLocationPermission$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.LOCATION));\n\n        case 2:\n          _await$Permissions$as = _context.sent;\n          status = _await$Permissions$as.status;\n\n          if (!(status !== \"granted\")) {\n            _context.next = 6;\n            break;\n          }\n\n          return _context.abrupt(\"return\", false);\n\n        case 6:\n          return _context.abrupt(\"return\", true);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default function App() {\n  var _this2 = this;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      mapRegion = _useState2[0],\n      setMapRegion = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hasLocationPermissions = _useState4[0],\n      setHasLocationPermissions = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentLocation = _useState6[0],\n      setCurrentLocation = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      markers = _useState8[0],\n      setMarkers = _useState8[1];\n\n  var _useState9 = useState({\n    centerMap: false,\n    addPin: false,\n    pinText: \"Add Pin\"\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      buttons = _useState10[0],\n      setButtons = _useState10[1];\n\n  useEffect(function () {\n    var getLocPerm = function getLocPerm() {\n      var locPermission, loc;\n      return _regeneratorRuntime.async(function getLocPerm$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(getLocationPermission());\n\n            case 2:\n              locPermission = _context2.sent;\n\n              if (locPermission) {\n                _context2.next = 7;\n                break;\n              }\n\n              setCurrentLocation(\"Permission to access location was denied\");\n              _context2.next = 13;\n              break;\n\n            case 7:\n              setHasLocationPermissions(true);\n              _context2.next = 10;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 10:\n              loc = _context2.sent;\n              setCurrentLocation(loc);\n              setMapRegion({\n                latitude: loc.coords.latitude,\n                longitude: loc.coords.longitude,\n                latitudeDelta: 0.04,\n                longitudeDelta: 0.05\n              });\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    if (hasLocationPermissions === null) getLocPerm();\n  }), [];\n\n  var onMapPress = function onMapPress(e) {\n    if (buttons.addPin) {\n      setMarkers(markers.concat({\n        coordinate: e.nativeEvent.coordinate,\n        key: markers[markers.length - 1] ? markers[markers.length - 1].key + 1 : 1\n      }));\n    }\n  };\n\n  var onRegionChange = function onRegionChange(region) {\n    if (!buttons.centerMap) setMapRegion(region);\n  };\n\n  var addPin = function addPin() {\n    if (!buttons.addPin) setButtons(function (prevButtons) {\n      return _objectSpread(_objectSpread({}, prevButtons), {}, {\n        addPin: true,\n        pinText: \"Scrap Pins\"\n      });\n    });else {\n      setButtons(function (prevButtons) {\n        return _objectSpread(_objectSpread({}, prevButtons), {}, {\n          addPin: false,\n          pinText: \"Add Pin\"\n        });\n      });\n      setMarkers([]);\n    }\n  };\n\n  var centerMap = function centerMap() {\n    setButtons(function (prevButtons) {\n      return _objectSpread(_objectSpread({}, prevButtons), {}, {\n        centerMap: true\n      });\n    });\n    setMapRegion(function (prevRegion) {\n      return _objectSpread(_objectSpread({}, prevRegion), {}, {\n        latitude: currentLocation.coords.latitude,\n        longitude: currentLocation.coords.longitude\n      });\n    });\n    setTimeout(function () {\n      return setButtons(function (prevButtons) {\n        return {\n          prevButtons: prevButtons,\n          centerMap: false\n        };\n      });\n    }, 300);\n  };\n\n  return currentLocation ? React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, React.createElement(MapView, {\n    style: styles.map,\n    region: mapRegion,\n    onPress: function onPress(e) {\n      return onMapPress(e);\n    },\n    onRegionChange: onRegionChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, React.createElement(Marker, {\n    coordinate: currentLocation.coords,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }), markers.map(function (marker) {\n    return React.createElement(Marker, {\n      key: marker.key,\n      coordinate: marker.coordinate,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    });\n  })), React.createElement(View, {\n    style: {\n      position: \"absolute\",\n      top: \"50%\",\n      alignSelf: \"flex-end\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Center\",\n    onPress: function onPress() {\n      return centerMap();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: buttons.pinText,\n    onPress: function onPress() {\n      return addPin();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }))) : React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, \" Loading... \");\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  map: {\n    width: Dimensions.get(\"window\").width,\n    height: Dimensions.get(\"window\").height\n  }\n});","map":{"version":3,"sources":["/home/pantero/Code/Codeworks/GoFish/GoFish-Client/screens/ProjectMap.js"],"names":["React","useState","useEffect","Constants","Permissions","Location","MapView","Marker","CustomMarker","paddingVertical","paddingHorizontal","backgroundColor","borderColor","borderRadius","elevation","color","getLocationPermission","askAsync","LOCATION","status","App","mapRegion","setMapRegion","hasLocationPermissions","setHasLocationPermissions","currentLocation","setCurrentLocation","markers","setMarkers","centerMap","addPin","pinText","buttons","setButtons","getLocPerm","locPermission","getCurrentPositionAsync","loc","latitude","coords","longitude","latitudeDelta","longitudeDelta","onMapPress","e","concat","coordinate","nativeEvent","key","length","onRegionChange","region","prevButtons","prevRegion","setTimeout","styles","container","map","marker","position","top","alignSelf","StyleSheet","create","flex","alignItems","justifyContent","width","Dimensions","get","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Constants } from \"expo\";\nimport * as Permissions from \"expo-permissions\";\nimport * as Location from \"expo-location\";\nimport MapView, { Marker } from \"react-native-maps\";\nimport { StyleSheet, Text, Button, View, Dimensions } from \"react-native\";\n\nconst CustomMarker = () => (\n  <View\n    style={{\n      paddingVertical: 10,\n      paddingHorizontal: 30,\n      backgroundColor: \"#007bff\",\n      borderColor: \"#eee\",\n      borderRadius: 5,\n      elevation: 10,\n    }}\n  >\n    <Text style={{ color: \"#fff\" }}>CM</Text>\n  </View>\n);\n\nconst getLocationPermission = async () => {\n  const { status } = await Permissions.askAsync(Permissions.LOCATION);\n  if (status !== \"granted\") return false;\n  return true;\n};\n\nexport default function App() {\n  const [mapRegion, setMapRegion] = useState(null);\n  const [hasLocationPermissions, setHasLocationPermissions] = useState(null);\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [buttons, setButtons] = useState({\n    centerMap: false,\n    addPin: false,\n    pinText: \"Add Pin\",\n  });\n\n  // eslint-disable-next-line no-unused-expressions\n  useEffect(() => {\n    const getLocPerm = async () => {\n      const locPermission = await getLocationPermission();\n      if (!locPermission) {\n        setCurrentLocation(\"Permission to access location was denied\");\n      } else {\n        setHasLocationPermissions(true);\n        const loc = await Location.getCurrentPositionAsync({});\n        setCurrentLocation(loc);\n        setMapRegion({\n          latitude: loc.coords.latitude,\n          longitude: loc.coords.longitude,\n          latitudeDelta: 0.04,\n          longitudeDelta: 0.05,\n        });\n      }\n    };\n    if (hasLocationPermissions === null) getLocPerm();\n  }),\n    [];\n\n  const onMapPress = (e) => {\n    if (buttons.addPin) {\n      setMarkers(\n        markers.concat({\n          coordinate: e.nativeEvent.coordinate,\n          key: markers[markers.length - 1]\n            ? markers[markers.length - 1].key + 1\n            : 1,\n        })\n      );\n    }\n  };\n\n  const onRegionChange = (region) => {\n    if (!buttons.centerMap) setMapRegion(region);\n  };\n\n  // useEffect(() => setCenter(false), [center]);\n  const addPin = () => {\n    if (!buttons.addPin)\n      setButtons((prevButtons) => ({\n        ...prevButtons,\n        addPin: true,\n        pinText: \"Scrap Pins\",\n      }));\n    else {\n      setButtons((prevButtons) => ({\n        ...prevButtons,\n        addPin: false,\n        pinText: \"Add Pin\",\n      }));\n      setMarkers([]);\n    }\n  };\n\n  const centerMap = () => {\n    setButtons((prevButtons) => ({ ...prevButtons, centerMap: true }));\n    setMapRegion((prevRegion) => ({\n      ...prevRegion,\n      latitude: currentLocation.coords.latitude,\n      longitude: currentLocation.coords.longitude,\n    }));\n    // hack to set center to false after map has finished panning\n    setTimeout(\n      () => setButtons((prevButtons) => ({ prevButtons, centerMap: false })),\n      300\n    );\n  };\n\n  return currentLocation ? (\n    <View style={styles.container}>\n      <MapView\n        style={styles.map}\n        region={mapRegion}\n        onPress={(e) => onMapPress(e)}\n        onRegionChange={onRegionChange}\n      >\n        <Marker coordinate={currentLocation.coords} />\n        {markers.map((marker) => (\n          <Marker key={marker.key} coordinate={marker.coordinate} />\n        ))}\n      </MapView>\n      <View\n        style={{\n          position: \"absolute\", // use absolute position to show button on top of the map\n          top: \"50%\", // for center align\n          alignSelf: \"flex-end\", // for align to right\n        }}\n      >\n        <Button title=\"Center\" onPress={() => centerMap()} />\n        <Button title={buttons.pinText} onPress={() => addPin()} />\n      </View>\n    </View>\n  ) : (\n    <Text> Loading... </Text>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  map: {\n    width: Dimensions.get(\"window\").width,\n    height: Dimensions.get(\"window\").height,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}