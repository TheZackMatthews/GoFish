{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Kim/Dropbox/Codeworks/thesis-project/GoFish-Client/screens/SignIn.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport { firebaseClient } from \"../auth/firebaseClient\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { renderForm } from \"react-native-web/dist/index\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { COLORS, SIZES, FONTS } from \"../constants/theme\";\nimport images from \"../images\";\n\nfunction SignIn() {\n  firebaseClient();\n  var showPassword = false;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorM = _useState6[0],\n      setErrorM = _useState6[1];\n\n  var submitHandler = function submitHandler(e) {\n    return _regeneratorRuntime.async(function submitHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              firebase.auth().signInWithEmailAndPassword(email, password);\n              setEmail('');\n              setPassword('');\n            } catch (error) {\n              setErrorM(error.message);\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  function renderForm() {\n    return React.createElement(View, {\n      style: {\n        marginTop: SIZES.padding,\n        marginHorizontal: SIZES.padding * 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: {\n        marginTop: SIZES.padding * 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: _objectSpread({\n        color: COLORS.lightGreen\n      }, FONTS.body3),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, \"Email\"), React.createElement(TextInput, {\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      },\n      defaultValue: email,\n      style: _objectSpread({\n        marginVertical: SIZES.padding,\n        borderBottomColor: COLORS.white,\n        borderBottomWidth: 1,\n        height: 40,\n        color: COLORS.white\n      }, FONTS.body3),\n      placeholder: \"Enter Email\",\n      placeholderTextColor: COLORS.white,\n      selectionColor: COLORS.white,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    })), React.createElement(View, {\n      style: {\n        marginTop: SIZES.padding * 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: _objectSpread({\n        color: COLORS.lightGreen\n      }, FONTS.body3),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, \"Password\"), React.createElement(TextInput, {\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      defaultValue: password,\n      style: _objectSpread({\n        marginVertical: SIZES.padding,\n        borderBottomColor: COLORS.white,\n        borderBottomWidth: 1,\n        height: 40,\n        color: COLORS.white\n      }, FONTS.body3),\n      placeholder: \"Enter Password\",\n      placeholderTextColor: COLORS.white,\n      selectionColor: COLORS.white,\n      secureTextEntry: !showPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }), React.createElement(TouchableOpacity, {\n      style: {\n        position: \"absolute\",\n        right: 0,\n        bottom: 10,\n        height: 30,\n        width: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  function renderButton() {\n    return React.createElement(View, {\n      style: {\n        margin: SIZES.padding * 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        height: 60,\n        backgroundColor: COLORS.black,\n        borderRadius: SIZES.radius,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginTop: SIZES.padding * 5\n      },\n      onPress: function onPress() {\n        return console.log(\"sign in...\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: _objectSpread({\n        color: COLORS.white\n      }, FONTS.h3),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, \"Sign In\")));\n  }\n\n  function renderSignUpLink() {\n    return React.createElement(TouchableOpacity, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        alignSelf: \"center\",\n        marginTop: SIZES.padding,\n        paddingHorizontal: SIZES.padding * 2\n      },\n      onPress: function onPress() {\n        return console.log(\"Sign Up\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: _objectSpread({\n        alignSelf: \"flex-end\",\n        color: COLORS.black\n      }, FONTS.h4),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, \"Create Account\"));\n  }\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: \"height\",\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.headContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.firstHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"GO Fish\"), React.createElement(Image, {\n    source: images.logo,\n    style: styles.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.signIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, \"Sign In\")), renderForm(), renderButton(), renderSignUpLink()));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.lime\n  },\n  headContainer: {\n    alignItems: \"center\"\n  },\n  firstHeader: {\n    marginBottom: SIZES.padding,\n    color: COLORS.lightGreen,\n    fontSize: SIZES.largeTitle,\n    marginTop: SIZES.padding * 4\n  },\n  logo: {\n    width: 60,\n    height: 60\n  },\n  signIn: {\n    marginTop: SIZES.padding * 5,\n    color: COLORS.lightGreen,\n    fontSize: SIZES.h1\n  }\n});\nexport default SignIn;","map":{"version":3,"sources":["/Users/Kim/Dropbox/Codeworks/thesis-project/GoFish-Client/screens/SignIn.js"],"names":["React","useState","firebaseClient","firebase","renderForm","COLORS","SIZES","FONTS","images","SignIn","showPassword","email","setEmail","password","setPassword","errorM","setErrorM","submitHandler","e","auth","signInWithEmailAndPassword","error","message","marginTop","padding","marginHorizontal","color","lightGreen","body3","text","marginVertical","borderBottomColor","white","borderBottomWidth","height","position","right","bottom","width","renderButton","margin","backgroundColor","black","borderRadius","radius","alignItems","justifyContent","console","log","h3","renderSignUpLink","flexDirection","alignSelf","paddingHorizontal","h4","styles","container","headContainer","firstHeader","logo","signIn","StyleSheet","create","flex","lime","marginBottom","fontSize","largeTitle","h1"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { firebaseClient } from \"../auth/firebaseClient\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  KeyboardAvoidingView,\n  ScrollView,\n  renderForm,\n  Image,\n  TextInput,\n  TouchableOpacity,\n} from \"react-native\";\nimport { COLORS, SIZES, FONTS } from \"../constants/theme\";\nimport images from \"../images\";\n\nfunction SignIn() {\n  firebaseClient();\n  const showPassword = false;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorM, setErrorM] = useState(null);\n\n  const submitHandler = async (e) => {\n      try {\n        firebase.auth().signInWithEmailAndPassword(email, password)\n        setEmail('');\n        setPassword('');\n      } catch(error) {\n          setErrorM(error.message)\n      }\n  }\n\n  function renderForm() {\n    return (\n      <View\n        style={{\n          marginTop: SIZES.padding,\n          marginHorizontal: SIZES.padding * 3,\n        }}\n      >\n        {/* Username */}\n        <View style={{ marginTop: SIZES.padding * 3 }}>\n          <Text style={{ color: COLORS.lightGreen, ...FONTS.body3 }}>\n            Email\n          </Text>\n          <TextInput\n            onChangeText={(text) => setEmail(text)}\n            defaultValue={email}\n            style={{\n              marginVertical: SIZES.padding,\n              borderBottomColor: COLORS.white,\n              borderBottomWidth: 1,\n              height: 40,\n              color: COLORS.white,\n              ...FONTS.body3,\n            }}\n            placeholder=\"Enter Email\"\n            placeholderTextColor={COLORS.white}\n            selectionColor={COLORS.white}\n          />\n        </View>\n\n        {/* Password */}\n        <View style={{ marginTop: SIZES.padding * 2 }}>\n          <Text style={{ color: COLORS.lightGreen, ...FONTS.body3 }}>\n            Password\n          </Text>\n          <TextInput\n            onChangeText={text => setPassword(text)}\n            defaultValue={password}\n            style={{\n              marginVertical: SIZES.padding,\n              borderBottomColor: COLORS.white,\n              borderBottomWidth: 1,\n              height: 40,\n              color: COLORS.white,\n              ...FONTS.body3,\n            }}\n            placeholder=\"Enter Password\"\n            placeholderTextColor={COLORS.white}\n            selectionColor={COLORS.white}\n            secureTextEntry={!showPassword}\n          />\n          <TouchableOpacity\n            style={{\n              position: \"absolute\",\n              right: 0,\n              bottom: 10,\n              height: 30,\n              width: 30,\n            }}\n            // onPress={() => setShowPassword(!showPassword)}\n          >\n            {/* <Image\n                        source={showPassword ? icons.disable_eye : icons.eye}\n                        style={{\n                            height: 20,\n                            width: 20,\n                            tintColor: COLORS.white\n                        }}\n                    /> */}\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  }\n\n  function renderButton() {\n    return (\n      <View style={{ margin: SIZES.padding * 3 }}>\n        <TouchableOpacity\n          style={{\n            height: 60,\n            backgroundColor: COLORS.black,\n            borderRadius: SIZES.radius,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginTop: SIZES.padding * 5,\n          }}\n          onPress={() => console.log(\"sign in...\")}\n        >\n          <Text style={{ color: COLORS.white, ...FONTS.h3 }}>Sign In</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  function renderSignUpLink() {\n    return (\n      <TouchableOpacity\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          alignSelf: \"center\",\n          marginTop: SIZES.padding,\n          paddingHorizontal: SIZES.padding * 2,\n        }}\n        onPress={() => console.log(\"Sign Up\")}\n      >\n        <Text\n          style={{ alignSelf: \"flex-end\", color: COLORS.black, ...FONTS.h4 }}\n        >\n          Create Account\n        </Text>\n      </TouchableOpacity>\n    );\n  }\n  return (\n    <KeyboardAvoidingView behavior=\"height\" style={styles.container}>\n      <ScrollView>\n        <View style={styles.headContainer}>\n          <Text style={styles.firstHeader}>GO Fish</Text>\n          <Image source={images.logo} style={styles.logo} />\n          <Text style={styles.signIn}>Sign In</Text>\n        </View>\n        {renderForm()}\n        {renderButton()}\n        {renderSignUpLink()}\n      </ScrollView>\n\n      {/* {renderAreaCodesModal()} */}\n    </KeyboardAvoidingView>\n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.lime,\n  },\n  headContainer: {\n    alignItems: \"center\",\n  },\n  firstHeader: {\n    marginBottom: SIZES.padding,\n    color: COLORS.lightGreen,\n    fontSize: SIZES.largeTitle,\n    marginTop: SIZES.padding * 4,\n  },\n  logo: {\n    width: 60,\n    height: 60,\n  },\n  signIn: {\n    marginTop: SIZES.padding * 5,\n    color: COLORS.lightGreen,\n    fontSize: SIZES.h1,\n  },\n});\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}