{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Kim/Dropbox/Codeworks/thesis-project/GoFish-Client/auth/index.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext, createContext } from 'react';\nimport { firebaseClient } from \"./firebaseClient\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nexport var AuthContext = createContext({});\n\nvar AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n  firebaseClient();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  useEffect(function () {\n    setLoading(false);\n    return firebase.auth().onIdTokenChanged(function _callee(user) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (user) {\n                _context.next = 3;\n                break;\n              }\n\n              setUser(null);\n              return _context.abrupt(\"return\");\n\n            case 3:\n              setUser(user);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n  }, []);\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      user: user\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }\n  }, !loading && children);\n};\n\nexport var useAuth = function useAuth() {\n  return useContext(AuthContext);\n};\nexport default AuthProvider;","map":{"version":3,"sources":["/Users/Kim/Dropbox/Codeworks/thesis-project/GoFish-Client/auth/index.js"],"names":["React","useState","useEffect","useContext","createContext","firebaseClient","firebase","AuthContext","AuthProvider","children","user","setUser","loading","setLoading","auth","onIdTokenChanged","useAuth"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,aAAjD,QAAsE,OAAtE;AACA,SAASC,cAAT;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AAEA,OAAO,IAAMC,WAAW,GAAGH,aAAa,CAAC,EAAD,CAAjC;;AAEP,IAAMI,YAAY,GAAG,SAAfA,YAAe,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;AACnCJ,EAAAA,cAAc;;AACd,kBAA0BJ,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAQS,IAAR;AAAA,MAAcC,OAAd;;AACA,mBAAgCV,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAQW,OAAR;AAAA,MAAiBC,UAAjB;;AAEAX,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,UAAU,CAAC,KAAD,CAAV;AACA,WAAOP,QAAQ,CAACQ,IAAT,GAAgBC,gBAAhB,CAAiC,iBAAOL,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA,kBACjCA,IADiC;AAAA;AAAA;AAAA;;AAEpCC,cAAAA,OAAO,CAAC,IAAD,CAAP;AAFoC;;AAAA;AAKtCA,cAAAA,OAAO,CAACD,IAAD,CAAP;;AALsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjC,CAAP;AAOD,GATQ,EASP,EATO,CAAT;AAWA,SAAO,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACA,MAAAA,IAAI,EAAJA;AAAD,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ,CAACE,OAAD,IAAYH,QADR,CAAP;AAGD,CAnBD;;AAqBA,OAAO,IAAMO,OAAO,GAAG,SAAVA,OAAU;AAAA,SAAMb,UAAU,CAACI,WAAD,CAAhB;AAAA,CAAhB;AAEP,eAAeC,YAAf","sourcesContent":["import React, { useState, useEffect, useContext, createContext } from 'react';\nimport { firebaseClient } from './firebaseClient';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\nexport const AuthContext = createContext({});\n\nconst AuthProvider = ({children}) => {\n  firebaseClient();\n  const [ user, setUser ] = useState(null);\n  const [ loading, setLoading ] = useState(true);\n  \n  useEffect(() => {\n    setLoading(false)\n    return firebase.auth().onIdTokenChanged(async (user) => {\n      if (!user) {\n        setUser(null);\n        return;\n      }\n      setUser(user);\n    })\n  },[]);\n\n  return <AuthContext.Provider value={{user}}>\n    {!loading && children}\n  </AuthContext.Provider>\n}\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport default AuthProvider;"]},"metadata":{},"sourceType":"module"}