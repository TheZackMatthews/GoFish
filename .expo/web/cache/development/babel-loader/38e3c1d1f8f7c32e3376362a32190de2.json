{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/pantero/Code/Codeworks/GoFish/GoFish-Client/screens/Fish1.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { COLORS, SIZES, FONTS } from \"../constants/theme\";\n\nfunction renderMainButton(key) {\n  return React.createElement(View, {\n    style: {\n      margin: SIZES.padding\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      height: 60,\n      backgroundColor: COLORS.black,\n      borderRadius: SIZES.radius,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    onPress: function onPress() {\n      return console.log(key);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread({\n      color: COLORS.white\n    }, FONTS.h3),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 15\n    }\n  }, key)));\n}\n\nfunction renderNavigationButton(key) {\n  return React.createElement(View, {\n    style: {\n      margin: SIZES.padding * 2,\n      alignItems: key === 'Back' ? 'flex-start' : 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      height: 10,\n      backgroundColor: COLORS.yellow,\n      borderRadius: SIZES.radius,\n      padding: 20,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    onPress: function onPress() {\n      return console.log(key);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread({\n      color: COLORS.white\n    }, FONTS.h3),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, key)));\n}\n\nfunction Question(question) {\n  return React.createElement(View, {\n    style: styles.question,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread({}, FONTS.h1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }\n  }, question));\n}\n\nfunction Fish1(props) {\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, Question('Is it alive or dead?')), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, renderMainButton('Alive'), renderMainButton('Dead')), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-around'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, renderNavigationButton('Back'), renderNavigationButton('Next')));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'space-around',\n    backgroundColor: COLORS.lime,\n    paddingTop: 100\n  },\n  question: {\n    alignItems: 'center'\n  }\n});\nexport default Fish1;","map":{"version":3,"sources":["/home/pantero/Code/Codeworks/GoFish/GoFish-Client/screens/Fish1.js"],"names":["React","COLORS","SIZES","FONTS","renderMainButton","key","margin","padding","height","backgroundColor","black","borderRadius","radius","alignItems","justifyContent","console","log","color","white","h3","renderNavigationButton","yellow","Question","question","styles","h1","Fish1","props","container","flexDirection","StyleSheet","create","flex","lime","paddingTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, Image, TouchableOpacity } from 'react-native';\nimport { COLORS, SIZES, FONTS } from '../constants/theme';\n\nfunction renderMainButton(key) {\n  return (\n      <View style={{ margin: SIZES.padding }}>\n          <TouchableOpacity\n              style={{\n                  height: 60,\n                  backgroundColor: COLORS.black,\n                  borderRadius: SIZES.radius,\n                  alignItems: 'center',\n                  justifyContent: 'center',\n              }}\n              onPress={() => console.log(key)}\n          >\n              <Text style={{ color: COLORS.white, ...FONTS.h3 }}>{key}</Text>\n          </TouchableOpacity>\n      </View>\n  )\n}\n\nfunction renderNavigationButton(key) {\n  return (\n      <View style={{ margin: SIZES.padding*2, alignItems: key==='Back'? 'flex-start':'flex-end'}}>\n          <TouchableOpacity\n              style={{\n                  height: 10,\n                  \n                  backgroundColor: COLORS.yellow,\n                  borderRadius: SIZES.radius,\n                  padding: 20,\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  \n              }}\n              onPress={() => console.log(key)}\n          >\n              <Text style={{ color: COLORS.white, ...FONTS.h3 }}>{key}</Text>\n          </TouchableOpacity>\n      </View>\n  )\n}\n\nfunction Question(question) {\n  return (\n    <View style={styles.question}>\n     <Text style={{...FONTS.h1}}>{question}</Text> \n    </View>    \n  );\n}\nfunction Fish1(props) {\n  return (\n    <View style={styles.container}>\n      <View>\n        {Question('Is it alive or dead?')}\n      </View>\n\n      <View>\n      {renderMainButton('Alive')}\n      {renderMainButton('Dead')} \n      </View>\n      \n      <View style={{flexDirection:'row', justifyContent:'space-around'}}>\n      {renderNavigationButton('Back')}\n      {renderNavigationButton('Next')}  \n      </View>\n    </View>\n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex:1,\n    justifyContent:'space-around',\n    backgroundColor:COLORS.lime,\n    paddingTop:100\n  },\n  question:{\n    alignItems:'center'\n  }\n})\n\nexport default Fish1;"]},"metadata":{},"sourceType":"module"}